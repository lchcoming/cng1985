#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace carwork
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qianlida")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertts_LineInfo(ts_LineInfo instance);
    partial void Updatets_LineInfo(ts_LineInfo instance);
    partial void Deletets_LineInfo(ts_LineInfo instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::carwork.Properties.Settings.Default.qianlidaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ts_LineInfo> ts_LineInfos
		{
			get
			{
				return this.GetTable<ts_LineInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ts_LineInfo")]
	public partial class ts_LineInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _li_LineID;
		
		private string _li_LineName;
		
		private string _li_BeginSiteID;
		
		private string _li_BeginSite;
		
		private string _li_EndSiteID;
		
		private string _li_EndSite;
		
		private System.Nullable<double> _li_Kilometer;
		
		private string _li_InRegion;
		
		private string _li_Direction;
		
		private System.Nullable<bool> _li_StopOrOpen;
		
		private string _li_StationID;
		
		private string _li_Station;
		
		private string _li_Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onli_LineIDChanging(string value);
    partial void Onli_LineIDChanged();
    partial void Onli_LineNameChanging(string value);
    partial void Onli_LineNameChanged();
    partial void Onli_BeginSiteIDChanging(string value);
    partial void Onli_BeginSiteIDChanged();
    partial void Onli_BeginSiteChanging(string value);
    partial void Onli_BeginSiteChanged();
    partial void Onli_EndSiteIDChanging(string value);
    partial void Onli_EndSiteIDChanged();
    partial void Onli_EndSiteChanging(string value);
    partial void Onli_EndSiteChanged();
    partial void Onli_KilometerChanging(System.Nullable<double> value);
    partial void Onli_KilometerChanged();
    partial void Onli_InRegionChanging(string value);
    partial void Onli_InRegionChanged();
    partial void Onli_DirectionChanging(string value);
    partial void Onli_DirectionChanged();
    partial void Onli_StopOrOpenChanging(System.Nullable<bool> value);
    partial void Onli_StopOrOpenChanged();
    partial void Onli_StationIDChanging(string value);
    partial void Onli_StationIDChanged();
    partial void Onli_StationChanging(string value);
    partial void Onli_StationChanged();
    partial void Onli_RemarkChanging(string value);
    partial void Onli_RemarkChanged();
    #endregion
		
		public ts_LineInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_LineID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string li_LineID
		{
			get
			{
				return this._li_LineID;
			}
			set
			{
				if ((this._li_LineID != value))
				{
					this.Onli_LineIDChanging(value);
					this.SendPropertyChanging();
					this._li_LineID = value;
					this.SendPropertyChanged("li_LineID");
					this.Onli_LineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_LineName", DbType="VarChar(50)")]
		public string li_LineName
		{
			get
			{
				return this._li_LineName;
			}
			set
			{
				if ((this._li_LineName != value))
				{
					this.Onli_LineNameChanging(value);
					this.SendPropertyChanging();
					this._li_LineName = value;
					this.SendPropertyChanged("li_LineName");
					this.Onli_LineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_BeginSiteID", DbType="VarChar(50)")]
		public string li_BeginSiteID
		{
			get
			{
				return this._li_BeginSiteID;
			}
			set
			{
				if ((this._li_BeginSiteID != value))
				{
					this.Onli_BeginSiteIDChanging(value);
					this.SendPropertyChanging();
					this._li_BeginSiteID = value;
					this.SendPropertyChanged("li_BeginSiteID");
					this.Onli_BeginSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_BeginSite", DbType="VarChar(50)")]
		public string li_BeginSite
		{
			get
			{
				return this._li_BeginSite;
			}
			set
			{
				if ((this._li_BeginSite != value))
				{
					this.Onli_BeginSiteChanging(value);
					this.SendPropertyChanging();
					this._li_BeginSite = value;
					this.SendPropertyChanged("li_BeginSite");
					this.Onli_BeginSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_EndSiteID", DbType="VarChar(50)")]
		public string li_EndSiteID
		{
			get
			{
				return this._li_EndSiteID;
			}
			set
			{
				if ((this._li_EndSiteID != value))
				{
					this.Onli_EndSiteIDChanging(value);
					this.SendPropertyChanging();
					this._li_EndSiteID = value;
					this.SendPropertyChanged("li_EndSiteID");
					this.Onli_EndSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_EndSite", DbType="VarChar(50)")]
		public string li_EndSite
		{
			get
			{
				return this._li_EndSite;
			}
			set
			{
				if ((this._li_EndSite != value))
				{
					this.Onli_EndSiteChanging(value);
					this.SendPropertyChanging();
					this._li_EndSite = value;
					this.SendPropertyChanged("li_EndSite");
					this.Onli_EndSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_Kilometer", DbType="Float")]
		public System.Nullable<double> li_Kilometer
		{
			get
			{
				return this._li_Kilometer;
			}
			set
			{
				if ((this._li_Kilometer != value))
				{
					this.Onli_KilometerChanging(value);
					this.SendPropertyChanging();
					this._li_Kilometer = value;
					this.SendPropertyChanged("li_Kilometer");
					this.Onli_KilometerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_InRegion", DbType="VarChar(50)")]
		public string li_InRegion
		{
			get
			{
				return this._li_InRegion;
			}
			set
			{
				if ((this._li_InRegion != value))
				{
					this.Onli_InRegionChanging(value);
					this.SendPropertyChanging();
					this._li_InRegion = value;
					this.SendPropertyChanged("li_InRegion");
					this.Onli_InRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_Direction", DbType="VarChar(50)")]
		public string li_Direction
		{
			get
			{
				return this._li_Direction;
			}
			set
			{
				if ((this._li_Direction != value))
				{
					this.Onli_DirectionChanging(value);
					this.SendPropertyChanging();
					this._li_Direction = value;
					this.SendPropertyChanged("li_Direction");
					this.Onli_DirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_StopOrOpen", DbType="Bit")]
		public System.Nullable<bool> li_StopOrOpen
		{
			get
			{
				return this._li_StopOrOpen;
			}
			set
			{
				if ((this._li_StopOrOpen != value))
				{
					this.Onli_StopOrOpenChanging(value);
					this.SendPropertyChanging();
					this._li_StopOrOpen = value;
					this.SendPropertyChanged("li_StopOrOpen");
					this.Onli_StopOrOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_StationID", DbType="VarChar(50)")]
		public string li_StationID
		{
			get
			{
				return this._li_StationID;
			}
			set
			{
				if ((this._li_StationID != value))
				{
					this.Onli_StationIDChanging(value);
					this.SendPropertyChanging();
					this._li_StationID = value;
					this.SendPropertyChanged("li_StationID");
					this.Onli_StationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_Station", DbType="VarChar(50)")]
		public string li_Station
		{
			get
			{
				return this._li_Station;
			}
			set
			{
				if ((this._li_Station != value))
				{
					this.Onli_StationChanging(value);
					this.SendPropertyChanging();
					this._li_Station = value;
					this.SendPropertyChanged("li_Station");
					this.Onli_StationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_li_Remark", DbType="VarChar(50)")]
		public string li_Remark
		{
			get
			{
				return this._li_Remark;
			}
			set
			{
				if ((this._li_Remark != value))
				{
					this.Onli_RemarkChanging(value);
					this.SendPropertyChanging();
					this._li_Remark = value;
					this.SendPropertyChanged("li_Remark");
					this.Onli_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
