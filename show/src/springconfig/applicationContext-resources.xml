<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:faces="http://www.springframework.org/schema/faces"
	xmlns:flow="http://www.springframework.org/schema/webflow-config"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:osgi-compendium="http://www.springframework.org/schema/osgi-compendium"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/faces http://www.springframework.org/schema/faces/spring-faces-2.0.xsd
		http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
		http://www.springframework.org/schema/osgi-compendium http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf/jdbc.properties</value>
				<value>classpath:conf/resource.properties</value>
			</list>
		</property>
	</bean>

    <!-- 数据源配置  -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
		   <value>${c3p0.driverClass}</value>
		</property>
		<property name="jdbcUrl">
		   <value>${c3p0.jdbcUrl}</value>
		</property>
		<property name="user">
		   <value>${c3p0.user}</value>
		</property>
		<property name="password">
		   <value>${c3p0.password}</value>
		</property>
		<property name="minPoolSize">
		   <value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
		   <value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="initialPoolSize">
		   <value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="maxIdleTime">
		   <value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="acquireIncrement">
		   <value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="maxStatements">
		   <value>${c3p0.maxStatements}</value>
		</property>
		<property name="idleConnectionTestPeriod">
		   <value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>${c3p0.acquireRetryAttempts}</value>
		</property>
		<property name="breakAfterAcquireFailure">
			<value>${c3p0.breakAfterAcquireFailure}</value>
		</property>
		<property name="testConnectionOnCheckout">
			<value>${c3p0.testConnectionOnCheckout}</value>
		</property>
	</bean>
	

     <!-- 事务配置  -->
     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	     <property name="dataSource" ref="dataSource" />  
	 </bean>  
 
     <!-- 
        <tx:annotation-driven transaction-manager="transactionManager" />   
     --> 

	
    <!-- 配置Hibernate中的SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="mappingDirectoryLocations">
			<list>
			<value>classpath:com/gete/sunps/entity/</value> 
			</list> 
		</property>
	</bean>
	
	<bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
	
	  <property name="transactionManager">
        <ref bean="transactionManager"/>	  
	  </property>
	  <property name="transactionAttributes">
	 
	    <props>
	      
	      <prop key="add*">PROPAGATION_REQUIRED</prop>
	      <prop key="pre*">PROPAGATION_REQUIRED</prop>
	      <prop key="delete*">PROPAGATION_REQUIRED</prop>
	      <prop key="modify*">PROPAGATION_REQUIRED</prop>
	      <prop key="edit*">PROPAGATION_REQUIRED</prop>
	      <prop key="update*">PROPAGATION_REQUIRED</prop>
	      <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
	      <prop key="release*">PROPAGATION_REQUIRED</prop>
	      <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
	    </props>
	  </property>
	</bean>
	
	<!-- 
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="add*" read-only="false" />
			<tx:method name="save*" read-only="false" />
			<tx:method name="delete*" read-only="false" />
			<tx:method name="remove*" read-only="false" />
			<tx:method name="update*" read-only="false" />
			<tx:method name="edit*" read-only="false" />
		</tx:attributes>
	</tx:advice>
	-->
	<!-- 
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.gete..*Service.*(..))" advice-ref="txAdvice" />
	</aop:config>
	 -->
     
    <!-- BaseDao -->

	

	
	<!-- BaseService使用Spring对baseDAO进行托管 -->
	
	
	
	
	
  	
  <!-- 
  	<bean id="executeServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean"> 
        <property name="target">
            <ref bean="executeService" />
        </property>
   -->
		<!--指定代理类 -->
	 <!--

        <property name="interceptorNames">
            <list>
                <value>exceptionHandler</value>
            </list>
        </property>
    </bean>
  -->	

</beans>